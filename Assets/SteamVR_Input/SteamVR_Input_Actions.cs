//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Valve.VR
{
    using System;
    using UnityEngine;
    
    
    public partial class SteamVR_Actions
    {
        
        private static SteamVR_Action_Boolean p_rbe_GrabObject;
        
        private static SteamVR_Action_Pose p_rbe_Pose;
        
        private static SteamVR_Action_Boolean p_rbe_MenuAndSelectLaser;
        
        private static SteamVR_Action_Boolean p_rbe_TakeActionGeneric;
        
        private static SteamVR_Action_Boolean p_rbe_TakeActionMovement;
        
        private static SteamVR_Action_Boolean p_rbe_LeftClick;
        
        private static SteamVR_Action_Boolean p_rbe_RightClick;
        
        private static SteamVR_Action_Vector2 p_rbe_UpDownTouchpad;
        
        private static SteamVR_Action_Boolean p_rbe_UpDownTouchpadPressed;
        
        private static SteamVR_Action_Boolean p_rbe_PreviewAction;
        
        private static SteamVR_Action_Boolean p_rbe_TakePreviewedAction;
        
        private static SteamVR_Action_Vibration p_rbe_Haptic;
        
        public static SteamVR_Action_Boolean rbe_GrabObject
        {
            get
            {
                return SteamVR_Actions.p_rbe_GrabObject.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Pose rbe_Pose
        {
            get
            {
                return SteamVR_Actions.p_rbe_Pose.GetCopy<SteamVR_Action_Pose>();
            }
        }
        
        public static SteamVR_Action_Boolean rbe_MenuAndSelectLaser
        {
            get
            {
                return SteamVR_Actions.p_rbe_MenuAndSelectLaser.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean rbe_TakeActionGeneric
        {
            get
            {
                return SteamVR_Actions.p_rbe_TakeActionGeneric.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean rbe_TakeActionMovement
        {
            get
            {
                return SteamVR_Actions.p_rbe_TakeActionMovement.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean rbe_LeftClick
        {
            get
            {
                return SteamVR_Actions.p_rbe_LeftClick.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean rbe_RightClick
        {
            get
            {
                return SteamVR_Actions.p_rbe_RightClick.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Vector2 rbe_UpDownTouchpad
        {
            get
            {
                return SteamVR_Actions.p_rbe_UpDownTouchpad.GetCopy<SteamVR_Action_Vector2>();
            }
        }
        
        public static SteamVR_Action_Boolean rbe_UpDownTouchpadPressed
        {
            get
            {
                return SteamVR_Actions.p_rbe_UpDownTouchpadPressed.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean rbe_PreviewAction
        {
            get
            {
                return SteamVR_Actions.p_rbe_PreviewAction.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean rbe_TakePreviewedAction
        {
            get
            {
                return SteamVR_Actions.p_rbe_TakePreviewedAction.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Vibration rbe_Haptic
        {
            get
            {
                return SteamVR_Actions.p_rbe_Haptic.GetCopy<SteamVR_Action_Vibration>();
            }
        }
        
        private static void InitializeActionArrays()
        {
            Valve.VR.SteamVR_Input.actions = new Valve.VR.SteamVR_Action[] {
                    SteamVR_Actions.rbe_GrabObject,
                    SteamVR_Actions.rbe_Pose,
                    SteamVR_Actions.rbe_MenuAndSelectLaser,
                    SteamVR_Actions.rbe_TakeActionGeneric,
                    SteamVR_Actions.rbe_TakeActionMovement,
                    SteamVR_Actions.rbe_LeftClick,
                    SteamVR_Actions.rbe_RightClick,
                    SteamVR_Actions.rbe_UpDownTouchpad,
                    SteamVR_Actions.rbe_UpDownTouchpadPressed,
                    SteamVR_Actions.rbe_PreviewAction,
                    SteamVR_Actions.rbe_TakePreviewedAction,
                    SteamVR_Actions.rbe_Haptic};
            Valve.VR.SteamVR_Input.actionsIn = new Valve.VR.ISteamVR_Action_In[] {
                    SteamVR_Actions.rbe_GrabObject,
                    SteamVR_Actions.rbe_Pose,
                    SteamVR_Actions.rbe_MenuAndSelectLaser,
                    SteamVR_Actions.rbe_TakeActionGeneric,
                    SteamVR_Actions.rbe_TakeActionMovement,
                    SteamVR_Actions.rbe_LeftClick,
                    SteamVR_Actions.rbe_RightClick,
                    SteamVR_Actions.rbe_UpDownTouchpad,
                    SteamVR_Actions.rbe_UpDownTouchpadPressed,
                    SteamVR_Actions.rbe_PreviewAction,
                    SteamVR_Actions.rbe_TakePreviewedAction};
            Valve.VR.SteamVR_Input.actionsOut = new Valve.VR.ISteamVR_Action_Out[] {
                    SteamVR_Actions.rbe_Haptic};
            Valve.VR.SteamVR_Input.actionsVibration = new Valve.VR.SteamVR_Action_Vibration[] {
                    SteamVR_Actions.rbe_Haptic};
            Valve.VR.SteamVR_Input.actionsPose = new Valve.VR.SteamVR_Action_Pose[] {
                    SteamVR_Actions.rbe_Pose};
            Valve.VR.SteamVR_Input.actionsBoolean = new Valve.VR.SteamVR_Action_Boolean[] {
                    SteamVR_Actions.rbe_GrabObject,
                    SteamVR_Actions.rbe_MenuAndSelectLaser,
                    SteamVR_Actions.rbe_TakeActionGeneric,
                    SteamVR_Actions.rbe_TakeActionMovement,
                    SteamVR_Actions.rbe_LeftClick,
                    SteamVR_Actions.rbe_RightClick,
                    SteamVR_Actions.rbe_UpDownTouchpadPressed,
                    SteamVR_Actions.rbe_PreviewAction,
                    SteamVR_Actions.rbe_TakePreviewedAction};
            Valve.VR.SteamVR_Input.actionsSingle = new Valve.VR.SteamVR_Action_Single[0];
            Valve.VR.SteamVR_Input.actionsVector2 = new Valve.VR.SteamVR_Action_Vector2[] {
                    SteamVR_Actions.rbe_UpDownTouchpad};
            Valve.VR.SteamVR_Input.actionsVector3 = new Valve.VR.SteamVR_Action_Vector3[0];
            Valve.VR.SteamVR_Input.actionsSkeleton = new Valve.VR.SteamVR_Action_Skeleton[0];
            Valve.VR.SteamVR_Input.actionsNonPoseNonSkeletonIn = new Valve.VR.ISteamVR_Action_In[] {
                    SteamVR_Actions.rbe_GrabObject,
                    SteamVR_Actions.rbe_MenuAndSelectLaser,
                    SteamVR_Actions.rbe_TakeActionGeneric,
                    SteamVR_Actions.rbe_TakeActionMovement,
                    SteamVR_Actions.rbe_LeftClick,
                    SteamVR_Actions.rbe_RightClick,
                    SteamVR_Actions.rbe_UpDownTouchpad,
                    SteamVR_Actions.rbe_UpDownTouchpadPressed,
                    SteamVR_Actions.rbe_PreviewAction,
                    SteamVR_Actions.rbe_TakePreviewedAction};
        }
        
        private static void PreInitActions()
        {
            SteamVR_Actions.p_rbe_GrabObject = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/rbe/in/GrabObject")));
            SteamVR_Actions.p_rbe_Pose = ((SteamVR_Action_Pose)(SteamVR_Action.Create<SteamVR_Action_Pose>("/actions/rbe/in/Pose")));
            SteamVR_Actions.p_rbe_MenuAndSelectLaser = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/rbe/in/MenuAndSelectLaser")));
            SteamVR_Actions.p_rbe_TakeActionGeneric = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/rbe/in/TakeActionGeneric")));
            SteamVR_Actions.p_rbe_TakeActionMovement = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/rbe/in/TakeActionMovement")));
            SteamVR_Actions.p_rbe_LeftClick = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/rbe/in/LeftClick")));
            SteamVR_Actions.p_rbe_RightClick = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/rbe/in/RightClick")));
            SteamVR_Actions.p_rbe_UpDownTouchpad = ((SteamVR_Action_Vector2)(SteamVR_Action.Create<SteamVR_Action_Vector2>("/actions/rbe/in/UpDownTouchpad")));
            SteamVR_Actions.p_rbe_UpDownTouchpadPressed = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/rbe/in/UpDownTouchpadPressed")));
            SteamVR_Actions.p_rbe_PreviewAction = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/rbe/in/PreviewAction")));
            SteamVR_Actions.p_rbe_TakePreviewedAction = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/rbe/in/TakePreviewedAction")));
            SteamVR_Actions.p_rbe_Haptic = ((SteamVR_Action_Vibration)(SteamVR_Action.Create<SteamVR_Action_Vibration>("/actions/rbe/out/Haptic")));
        }
    }
}
